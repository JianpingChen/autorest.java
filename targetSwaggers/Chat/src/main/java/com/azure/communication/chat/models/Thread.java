// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.chat.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The Thread model. */
@Fluent
public final class Thread {
    /*
     * Thread id
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Thread topic
     */
    @JsonProperty(value = "topic")
    private String topic;

    /*
     * Thread creation time in Unix time (epoch time) in milliseconds
     */
    @JsonProperty(value = "createdAt")
    private String createdAt;

    /*
     * Id of the thread owner
     */
    @JsonProperty(value = "createdBy")
    private String createdBy;

    /*
     * Flag if a thread is sticky - sticky thread has an immutable member list,
     * members cannot be added or removed.
     */
    @JsonProperty(value = "isStickyThread")
    private Boolean isStickyThread;

    /*
     * Members of the thread
     */
    @JsonProperty(value = "members")
    private List<ThreadMember> members;

    /**
     * Get the id property: Thread id.
     *
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Set the id property: Thread id.
     *
     * @param id the id value to set.
     * @return the Thread object itself.
     */
    public Thread setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the topic property: Thread topic.
     *
     * @return the topic value.
     */
    public String getTopic() {
        return this.topic;
    }

    /**
     * Set the topic property: Thread topic.
     *
     * @param topic the topic value to set.
     * @return the Thread object itself.
     */
    public Thread setTopic(String topic) {
        this.topic = topic;
        return this;
    }

    /**
     * Get the createdAt property: Thread creation time in Unix time (epoch time) in milliseconds.
     *
     * @return the createdAt value.
     */
    public String getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Set the createdAt property: Thread creation time in Unix time (epoch time) in milliseconds.
     *
     * @param createdAt the createdAt value to set.
     * @return the Thread object itself.
     */
    public Thread setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get the createdBy property: Id of the thread owner.
     *
     * @return the createdBy value.
     */
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Set the createdBy property: Id of the thread owner.
     *
     * @param createdBy the createdBy value to set.
     * @return the Thread object itself.
     */
    public Thread setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get the isStickyThread property: Flag if a thread is sticky - sticky thread has an immutable member list, members
     * cannot be added or removed.
     *
     * @return the isStickyThread value.
     */
    public Boolean isStickyThread() {
        return this.isStickyThread;
    }

    /**
     * Set the isStickyThread property: Flag if a thread is sticky - sticky thread has an immutable member list, members
     * cannot be added or removed.
     *
     * @param isStickyThread the isStickyThread value to set.
     * @return the Thread object itself.
     */
    public Thread setIsStickyThread(Boolean isStickyThread) {
        this.isStickyThread = isStickyThread;
        return this;
    }

    /**
     * Get the members property: Members of the thread.
     *
     * @return the members value.
     */
    public List<ThreadMember> getMembers() {
        return this.members;
    }

    /**
     * Set the members property: Members of the thread.
     *
     * @param members the members value to set.
     * @return the Thread object itself.
     */
    public Thread setMembers(List<ThreadMember> members) {
        this.members = members;
        return this;
    }
}
