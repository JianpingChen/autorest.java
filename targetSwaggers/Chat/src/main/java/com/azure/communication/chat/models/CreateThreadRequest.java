// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.chat.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The CreateThreadRequest model. */
@Fluent
public final class CreateThreadRequest {
    /*
     * Thread topic
     */
    @JsonProperty(value = "topic", required = true)
    private String topic;

    /*
     * Flag if a thread is sticky - sticky thread has an immutable member list,
     * members cannot be added or removed.
     * At the moment we only support sticky threads with two members.
     */
    @JsonProperty(value = "isStickyThread")
    private Boolean isStickyThread;

    /*
     * Members to be added to the thread
     */
    @JsonProperty(value = "members", required = true)
    private List<ThreadMember> members;

    /**
     * Get the topic property: Thread topic.
     *
     * @return the topic value.
     */
    public String getTopic() {
        return this.topic;
    }

    /**
     * Set the topic property: Thread topic.
     *
     * @param topic the topic value to set.
     * @return the CreateThreadRequest object itself.
     */
    public CreateThreadRequest setTopic(String topic) {
        this.topic = topic;
        return this;
    }

    /**
     * Get the isStickyThread property: Flag if a thread is sticky - sticky thread has an immutable member list, members
     * cannot be added or removed. At the moment we only support sticky threads with two members.
     *
     * @return the isStickyThread value.
     */
    public Boolean isStickyThread() {
        return this.isStickyThread;
    }

    /**
     * Set the isStickyThread property: Flag if a thread is sticky - sticky thread has an immutable member list, members
     * cannot be added or removed. At the moment we only support sticky threads with two members.
     *
     * @param isStickyThread the isStickyThread value to set.
     * @return the CreateThreadRequest object itself.
     */
    public CreateThreadRequest setIsStickyThread(Boolean isStickyThread) {
        this.isStickyThread = isStickyThread;
        return this;
    }

    /**
     * Get the members property: Members to be added to the thread.
     *
     * @return the members value.
     */
    public List<ThreadMember> getMembers() {
        return this.members;
    }

    /**
     * Set the members property: Members to be added to the thread.
     *
     * @param members the members value to set.
     * @return the CreateThreadRequest object itself.
     */
    public CreateThreadRequest setMembers(List<ThreadMember> members) {
        this.members = members;
        return this;
    }
}
