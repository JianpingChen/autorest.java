// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.communication.chat.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** The Message model. */
@Fluent
public final class Message {
    /*
     * The id of the message. This id is server generated.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Type of the message. The valid value should be "Text" or "RichText".
     */
    @JsonProperty(value = "messageType")
    private String messageType;

    /*
     * The client message Id specified when the message was sent.
     * This Id is a client-specific Id in a numeric unsigned Int64 format. It
     * can be used for client deduping, among other client usages.
     */
    @JsonProperty(value = "clientMessageId")
    private String clientMessageId;

    /*
     * The priority property.
     */
    @JsonProperty(value = "priority")
    private MessagePriority priority;

    /*
     * Version of the message.
     */
    @JsonProperty(value = "version")
    private String version;

    /*
     * Content of the message.
     */
    @JsonProperty(value = "content")
    private String content;

    /*
     * Display name of the message sender.
     */
    @JsonProperty(value = "senderDisplayName")
    private String senderDisplayName;

    /*
     * The timestamp when the message arrived at the server. The timestamp is
     * in ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`.
     */
    @JsonProperty(value = "originalArrivalTime")
    private OffsetDateTime originalArrivalTime;

    /*
     * The id of the message sender.
     */
    @JsonProperty(value = "from")
    private String from;

    /*
     * The timestamp when the message was deleted in Unix time (epoch time) in
     * milliseconds.
     */
    @JsonProperty(value = "deleteTime")
    private Long deleteTime;

    /*
     * The timestamp when the message was edited in Unix time (epoch time) in
     * milliseconds.
     */
    @JsonProperty(value = "editTime")
    private Long editTime;

    /**
     * Get the id property: The id of the message. This id is server generated.
     *
     * @return the id value.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Set the id property: The id of the message. This id is server generated.
     *
     * @param id the id value to set.
     * @return the Message object itself.
     */
    public Message setId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the messageType property: Type of the message. The valid value should be "Text" or "RichText".
     *
     * @return the messageType value.
     */
    public String getMessageType() {
        return this.messageType;
    }

    /**
     * Set the messageType property: Type of the message. The valid value should be "Text" or "RichText".
     *
     * @param messageType the messageType value to set.
     * @return the Message object itself.
     */
    public Message setMessageType(String messageType) {
        this.messageType = messageType;
        return this;
    }

    /**
     * Get the clientMessageId property: The client message Id specified when the message was sent. This Id is a
     * client-specific Id in a numeric unsigned Int64 format. It can be used for client deduping, among other client
     * usages.
     *
     * @return the clientMessageId value.
     */
    public String getClientMessageId() {
        return this.clientMessageId;
    }

    /**
     * Set the clientMessageId property: The client message Id specified when the message was sent. This Id is a
     * client-specific Id in a numeric unsigned Int64 format. It can be used for client deduping, among other client
     * usages.
     *
     * @param clientMessageId the clientMessageId value to set.
     * @return the Message object itself.
     */
    public Message setClientMessageId(String clientMessageId) {
        this.clientMessageId = clientMessageId;
        return this;
    }

    /**
     * Get the priority property: The priority property.
     *
     * @return the priority value.
     */
    public MessagePriority getPriority() {
        return this.priority;
    }

    /**
     * Set the priority property: The priority property.
     *
     * @param priority the priority value to set.
     * @return the Message object itself.
     */
    public Message setPriority(MessagePriority priority) {
        this.priority = priority;
        return this;
    }

    /**
     * Get the version property: Version of the message.
     *
     * @return the version value.
     */
    public String getVersion() {
        return this.version;
    }

    /**
     * Set the version property: Version of the message.
     *
     * @param version the version value to set.
     * @return the Message object itself.
     */
    public Message setVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the content property: Content of the message.
     *
     * @return the content value.
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Set the content property: Content of the message.
     *
     * @param content the content value to set.
     * @return the Message object itself.
     */
    public Message setContent(String content) {
        this.content = content;
        return this;
    }

    /**
     * Get the senderDisplayName property: Display name of the message sender.
     *
     * @return the senderDisplayName value.
     */
    public String getSenderDisplayName() {
        return this.senderDisplayName;
    }

    /**
     * Set the senderDisplayName property: Display name of the message sender.
     *
     * @param senderDisplayName the senderDisplayName value to set.
     * @return the Message object itself.
     */
    public Message setSenderDisplayName(String senderDisplayName) {
        this.senderDisplayName = senderDisplayName;
        return this;
    }

    /**
     * Get the originalArrivalTime property: The timestamp when the message arrived at the server. The timestamp is in
     * ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`.
     *
     * @return the originalArrivalTime value.
     */
    public OffsetDateTime getOriginalArrivalTime() {
        return this.originalArrivalTime;
    }

    /**
     * Set the originalArrivalTime property: The timestamp when the message arrived at the server. The timestamp is in
     * ISO8601 format: `yyyy-MM-ddTHH:mm:ssZ`.
     *
     * @param originalArrivalTime the originalArrivalTime value to set.
     * @return the Message object itself.
     */
    public Message setOriginalArrivalTime(OffsetDateTime originalArrivalTime) {
        this.originalArrivalTime = originalArrivalTime;
        return this;
    }

    /**
     * Get the from property: The id of the message sender.
     *
     * @return the from value.
     */
    public String getFrom() {
        return this.from;
    }

    /**
     * Set the from property: The id of the message sender.
     *
     * @param from the from value to set.
     * @return the Message object itself.
     */
    public Message setFrom(String from) {
        this.from = from;
        return this;
    }

    /**
     * Get the deleteTime property: The timestamp when the message was deleted in Unix time (epoch time) in
     * milliseconds.
     *
     * @return the deleteTime value.
     */
    public Long getDeleteTime() {
        return this.deleteTime;
    }

    /**
     * Set the deleteTime property: The timestamp when the message was deleted in Unix time (epoch time) in
     * milliseconds.
     *
     * @param deleteTime the deleteTime value to set.
     * @return the Message object itself.
     */
    public Message setDeleteTime(Long deleteTime) {
        this.deleteTime = deleteTime;
        return this;
    }

    /**
     * Get the editTime property: The timestamp when the message was edited in Unix time (epoch time) in milliseconds.
     *
     * @return the editTime value.
     */
    public Long getEditTime() {
        return this.editTime;
    }

    /**
     * Set the editTime property: The timestamp when the message was edited in Unix time (epoch time) in milliseconds.
     *
     * @param editTime the editTime value to set.
     * @return the Message object itself.
     */
    public Message setEditTime(Long editTime) {
        this.editTime = editTime;
        return this;
    }
}
